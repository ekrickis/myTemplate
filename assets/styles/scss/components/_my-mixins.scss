/************************************************

Stylesheet: Custom mixins Stylesheet

*************************************************/

$rem-base: 16px;

@mixin rems($property, $values...) {
  $max: length($values);
  $pxValues: '';
  $remValues: '';

  @for $i from 1 through $max {
    $value: strip-unit(nth($values, $i));
    $remValues: #{$remValues + $value / strip-unit($rem-base)}rem;

    @if $i < $max {
      $remValues: #{$remValues + " "};
    }
  }

  @for $i from 1 through $max {
    $value: strip-unit(nth($values, $i));
    $pxValues: #{$pxValues + $value}px;

    @if $i < $max {
      $pxValues: #{$pxValues + " "};
    }
  }

  #{$property}: $pxValues;
  #{$property}: $remValues;
}

@mixin background-image($name, $type) {
  background-image: url('../images/dist/#{$name}.#{$type}');
  background-repeat: no-repeat;

}

@mixin icon($name) {
  html & {
    @extend %#{$name};
  }

  .no-js &, .no-svg & {
    background-image: url('../images/dist/icons/png/#{$name}.png');
  }
}

@mixin border ($border-color: $second-color, $border-width: 1) {
  @include rems (border-width, $border-width);
  border-style: solid;
  border-color: $border-color;
}

/// Shorthand mixin for offset positioning
/// @param {String} $position - Either `relative`, `absolute` or `fixed`
/// @param {Length} $top [null] - Top offset
/// @param {Length} $right [null] - Right offset
/// @param {Length} $bottom [null] - Bottom offset
/// @param {Length} $left [null] - Left offset
@mixin position($position, $top: null, $right: null, $bottom: null, $left: null) {
  position: $position;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}


// Sizing stuff
@mixin size($width, $height: $width) {
  @include rems (width, $width);
  @include rems (height, $height);
}
